# Dicshunary (Dictionary game)

based on the pen and paper "dictionary" game
described in notes

for notes on gameplay, data, and architecture ideas,
see `dictionary-game-2025-06-22.txt`

`server.js` is a deno server script

`client.html` is sent by the server to clients.
it's a single file with script and style tags.
relies on being served to get server url and connect

`test-client.js` is a console client deno script
for connecting to the server and testing it.
see the file comments for usage

## TODO/TEST

[x] server: refactor disconnects
	move disconnects to separate list
    so that i don't have to filter them out
    when working through connected players.
    observed behaviour should be the same
	[x] server
		[x] delete socket
		[x] delete name
		    new player shouldn't collide with invisible name
		    well, see notes
		[x] move to disconnected
		[x] send 'disconnect' message to clients
		    with name and id
	[x] test client
		[x] delete player entry using id
		[x] print remaining players, not self
		[x] notify about disconnect
		    with disconnected name and id

## done

[x] store and use name and id (changeID: lowtsxty)
[x] make id optional for joining (changeID: krsotrks)
[x] simple state machine to manage game state (changeID: nmyuymyn)
[x] resolve name collision with suffix (changeID: klqyusnu)
[x] disconnect (changeID: mktwznzx)

### later

[ ] reconnect
	[ ] server
		[ ] add name and socket with id
			don't worry about uuid collision
		...
	...
[ ] version server and clients
	// print before anything else
[ ] state transition to giving word
[ ] waiting queue for joining during reading/voting
[~] main client: views, verification, and test-client logic 
