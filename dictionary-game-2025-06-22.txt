##  game description, breakdown

dictionary is a word game
multiple rounds
one word giver, rest guessers
giver changes every round
round starts with giver giving an unknown word
everyone secretly writes a definition and submits to giver
the giver's must be correct, and guessers' should be convincing
at end giver reads all definitions
and guessers vote for which they think is true
giver only registers votes
giver gets points for each player who guesses incorrect definition
guessers get points for each player picking their incorrect definition
the giver reveals who wrote which guess
round ends
and new starts with next player as giver


##  data, code names

derived from description

player-list
player = id, name
card = definition, player-id
giver = player-id (in case order changes, index becomes wrong)

do i want to enshrine card as a construct in the app?
i think it's just a definition, with an associated player
definition = body, author

player-list
player = id, name
definition = body, author
author = player-id
giver = player-id
definition-list

everything else can be derived from this, i think


##  views

there's not much going on
could probably just draw the page from scratch
whenever required

using a function that automatically creates elements
with props and children
with signature html(tag, props, ...children)


##  voting 

after the giver reads all the definitions
at the bottom will be a button to begin voting?
you'll want to sort votes by definition or player
if i have guessers vote on their phones
it'll encourage them to look down
instead of talk to each other
or even talk to the giver

so have the giver register people's votes
and have the giver read out scores as well
i.e., don't show score on all clients
though there is a lobby situation
between games
that could be stripped out
oh, but lobby allows reordering players
and reassigning giver
especially if someone joins mid-game


##

clients store player info client-side
and allow editing name before sending stuff over
if the info is stored, name is filled in
and id is sent over
if not stored, name is blank, id is generated

make the clients shallow, i think
little state and verification
draw whatever the server tells them
trust in the server


##  name

suffix random letters if same
players should be able to play
without having to fix name error

save it to player data on join
to keep it consistent everywhere
walk through players
if name matches, add suffix to current
this means send it back to client
and client adopts name
only change suffix of current if
`name + suffix` collides with existing `name + suffix`
don't treat suffix as counter, only differentiator
if the whole name doesn't match
then there's no collision
and no reason to do anything
users can also type "<name> (z)"
and it wouldn't matter

allow renames only in lobby
without waiting for approval or anything
just an edit name button
that creates a component then waits for submit
to delete component and send rename message
pretty straightforward this


## localStorage

prefix items with game name and version
because localStorage is same with url

same url no matter backing server means
different servers could overwrite keys
and then clients would read and use bad data

maybe make it a single key with nested data
use stringify and parse because it only stores strings


## join

request rejoin without input if data is stored
if not stored, get name then join

i considered gameId but that's not required
server will send data for current game
client doesn't need to do anything


##  rejoin and disconnects

delete socket on close
on reconnect if socket doesn't exist
add new socket
else send "check for other tab" error

guessers disconnected before submit
means they get x for score in that round
do not store this as a 0 score
a bad round is not the same as absent round
giver should wait for disconnected players
to submit guess if they're rejoining
or the giver can just end the round


#  giver disconnect

submit will fail if the giver disconnects
if it does send an 'error' message back to the client
and client shows non-modal notification with message
next to submit button

if giver purposely disconnects
then should the round be skipped?
have players vote to skip
depending on the giver to do it
can lead to game being stuck
they could reconnect and press 'skip'
but then why would they leave so suddenly
have the button send skip once
and then get disabled
and say "waiting for everyone to skip"
show this button only if giver disconnects
and hide it when giver reconnects

i have to tally skip votes
declare 'skipVotes' in the innermost scope possible
and if it matches connected player count then skip round


##  lobby

in between each round
mainly to reorder players and change giver
also to wait for players
and maybe to change name


##  game id

generate game id when server starts
send it to clients on join
and maybe with all messages
store it on the client
so that it can check with the server
if the same game is running
had an issue with disconnection
in the uno prototype
so i want reconnection
but a new game isn't quite reconnection

hmmm.... might not need it
server knows if there's any history
if there's history it can send it
else it sends rest of game state
sooo.... screw game id?
yeah, i'll add it if i see a reason later


##  messaging

should i have something to make messages quickly?
message.join(required, data)?
or message(type, {data})?
would ensure messages have a type
and it could stringify it
message.whatever() ensures i use an actual message type
a tagged enum of sorts

hmmm.... more valuable when it stabilises?
or when it's figured out more?
maybe do it when i get my first few errors


##

add date/time to logs?
