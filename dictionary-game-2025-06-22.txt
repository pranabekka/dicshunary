##  game description, breakdown

dictionary is a word game
multiple rounds
one word giver, rest guessers
giver changes every round
round starts with giver giving an unknown word
everyone secretly writes a definition and submits to giver
the giver's must be correct, and guessers' should be convincing
at end giver reads all definitions
and guessers vote for which they think is true
giver only registers votes
giver gets points for each player who guesses incorrect definition
guessers get points for each player picking their incorrect definition
the giver reveals who wrote which guess
round ends
and new starts with next player as giver


##  data, names

derived from description

player-list
player = id, name
card = definition, player-id
giver = player-id (in case order changes, index becomes wrong)

do i want to enshrine card as a construct in the app?
i think it's just a definition, with an associated player
definition = body, author

player-list
player = id, name
definition = body, author
author = player-id
giver = player-id
definition-list

everything else can be derived from this, i think


## views

there's not much going on
could probably just draw the page from scratch
whenever required

i'm using template elements for pages as well as components
so i want the functions for getting and applying templates
inside a render function
instead of accessible everywhere else

the other approach is creating a function
that automatically creates elements
like htm(tag, props, children)
which makes splicing values in easier

templates is verbose, but html defs are simple,
a custom function requires creating it,
but is much easier overall

templates mean components and pages in html
but it needs a nicer interface
like a function to fetch and fill templates


## voting 

after the giver reads all the definitions
at the bottom will be a button to begin voting?
you'll want to sort votes by definition or player
if i have guessers vote on their phones
it'll encourage them to look down
instead of talk to each other
or even talk to the giver

so have the giver register people's votes
and have the giver read out scores as well
i.e., don't show score on all clients
though there is a lobby situation
between games
that could be stripped out
oh, but lobby allows reordering players
and reassigning giver
especially if someone joins mid-game


##

clients store player info client-side
and allow editing name before sending stuff over
if the info is stored, name is filled in
and id is sent over
if not stored, name is blank, id is generated

make the clients shallow, i think
little state and verification
draw whatever the server tells them
trust in the server


##

perhaps join is sent without user input
with id if stored, else expect id
and name is added later if not existing
you can rename at any time
so just send it along with id
any message other than join requires id

this might be a bad idea
or i remember thinking so
it does allow sending back game state instantly
without waiting for user input


##

does a disconnect count as error or close?
i guess close is when the client calls ws.close()
so it'll almost always be an error
does error have additional data?
will have to see


##

generate game id when server starts
send it to clients on join
and maybe with all messages
store it on the client
so that it can check with the server
if the same game is running


##

should i have something to make messages quickly?
message.join(required, data)?
or message(type, {data})?
would ensure messages have a type
and it could stringify it
message.whatever() ensures i use an actual message type
a tagged enum of sorts


##

there are incoming messages and outgoing messages
call them msgIn and msgOut?
in the server functions handling client messages


##

add date/time to logs?
